@use 'sass:map';
@use 'sass:math';
@use '../../../../styles/variables/font';
@use '../../../../styles/variables/size';
@use '../../../../styles/mixins/screen-reader';

@keyframes fade-in {
  from {
    opacity: 0;
  }
}

@keyframes fade-in-scale {
  from {
    opacity: 0;
    transform: scale(0.975);
  }
}

.modal {
  display: flex;
  z-index: 9; // sit in front of most stuff, but not global alerts

  &[aria-hidden='true'] {
    display: none;
  }

  &,
  &__overlay {
    bottom: 0;
    left: 0;
    position: fixed;
    right: 0;
    top: 0;
  }

  &__overlay {
    animation: fade-in var(--evg-transition-duration) both
      var(--evg-transition-timing);
    background-color: var(--evg-theme-background);
    opacity: 0.65;
  }

  &__dialog {
    animation: fade-in-scale var(--evg-transition-duration)
      math.div(var(--evg-transition-duration), 2) both
      var(--evg-transition-timing);
    box-shadow: var(--evg-shadow);
    margin: auto;
    max-height: 100vh;
    max-width: 100%;
    overflow-y: auto;
    position: relative;
    z-index: 9;

    @each $key, $size in size.$map {
      $value: map.get($size, 'value');
      &--size-#{$key} {
        width: $value;
      }
    }

    &--auto {
      width: auto;
    }
  }

  &__title {
    @include screen-reader.sr-only;
  }

  &__inner {
    padding: var(--evg-spacing-fluid-sm) var(--evg-spacing-fluid-sm);
  }
}
