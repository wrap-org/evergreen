import fs from 'node:fs/promises';
import { dirname } from 'node:path';
import { fileURLToPath } from 'node:url';

import { glob } from 'glob';

try {
  process.exitCode = 0;

  const __filename = fileURLToPath(import.meta.url);
  const __dirname = dirname(__filename);

  // If a dry run, return as the dependencies will not have been installed
  if (process.env.npm_config_dry_run === 'true') {
    process.exit();
  }

  const files = await glob(
    `${__dirname}/../src/components/**/!(*.stories).tsx`,
  );

  const components = files.map((file) => {
    const start = file.indexOf('src/components/') + 4;
    const path = file.slice(start);
    const name = path.split('\\').pop().split('/').pop().replace('.tsx', '');
    const pathNoExt = path.replace('.tsx', '');

    return `export { default as ${name} } from './${pathNoExt}';\nexport * from './${pathNoExt}';`;
  });

  await fs.writeFile(
    'src/index.tsx',
    `${[
      '// DO NOT EDIT - Autogenerated by /scripts/export-components.mjs',
      ...components,
    ].join('\r\n')}\r\n`,
  );
} catch (error) {
  process.exitCode = 1;
  console.error(error);
}

process.exit();
